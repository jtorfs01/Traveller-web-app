//Created by dentorfs_ on 05/12/15.
extends layout

block content

    each item, i in activities

        .card.large
            .card-image.waves-effect.waves-block.waves-light
                div(value= item.ACTIVITY_ID, class='activityId', id='activityId')

                div(class='activityDatesDiv', id='activityDatesDiv')
            //            input(type='text', class='activityId', id='activityId', value=item.ACTIVITY_ID, name='activityId', readonly)
            .card-content
              form(action='http://localhost:3000/saveActivity' method='post' id='saveActivity', class='saveActivity' ).col.s6

                button(type='button',id='edit', class='edit').btn-floating.btn-small.waves-effect.waves-light.red.i.material-icons.right edit

                button(type='submit',id='saveButton', class='saveButton', display='none').btn-floating.btn-small.waves-effect.waves-light.red.i.material-icons.right save

                span.card-title.activator.grey-text.text-darken-4
                    .input-field.col.s6
                       input(type='text', class='name', id='name', value=item.NAME, name='name', length='100', readonly)

                .input-field.col.s6
                    textarea(type='text', id='description' class='materialize-textarea description', name='description', length='500', readonly)=item.DESCRIPTION

                br
                p.dark Pick-up location:
                p.light=item.STREET + ', ' + item.CITY

                select(name='activityDates', class='activityDates', id='activityDates').browser-default.date_from
                     each item2, i2 in activityDates
                        if(item.ACTIVITY_ID == item2.ACTIVITY_ID)
                            option(value= item2.CALENDAR_ID)= moment(item2.DATE_FROM).format("MM-DD-YYYY HH:mm")
                      option(value='Add date') Add date

                .input-field.col.s6
                   label(for='addDate', class='addDateLabel') Add a date and time (format: dd-mm-yyyy hh:mm) (Please use 24h format)
                   input(type='text', class='addDate', id='addDate', name='addDate', readonly)

                   a#login-button.btn-small(href='#', class='addDateLink', name='addDateLink') Add date

         script.
             $(document).ready(function () {
                 $('select').material_select()
                 $('select').material_select('update')
                 $('.addDate').css('display','none');
                 $('.addDateLabel').css('display', 'none');
                 $('.activityId').css('display', 'none');
                 $('.addDateLink').css('display', 'none');
                 $('#saveButton').css('display', 'none');

                // $('input.name, textarea.description').characterCounter()

                 $('button.edit').click(function () {
                 var change = $(this).parent().parent();
                         change.find('input[type="text"]').prop('readonly', false);
                         change.find('.description').prop('readonly', false);
                         change.find('.addDate').prop('readonly', false);
                         change.find('#edit').css('display', 'none');
                         change.find('.saveButton').css('display', 'block');
                     });

                     $('a.addDateLink').click(function () {
                     //regex to check entry for datetime format: mm-dd-yyyy hh:mm
                        var re = /^\d{1,2}\-\d{1,2}\-\d{4}\s\d{1,2}:\d{2}([ap]m)?$/;

                         var x = $(".addDate").val();

                         if (x.match(re)){
                         $('.activityDates').append("<option value='custom'>" + x + "</option>");
                             //Alert is just to debug, change to decent notification before production.
                             alert('Date added.');
                         }
                         else {
                            return false;
                            alert('its not a match');
                        };
                     });

                 $('.date_from').change(function () {
                     var selected = $(this).val();
                     if (selected == 'Add date') {

                         $('.addDate').css('display','block');
                         $('.addDateLabel').css('display', 'block');
                         $('.addDateLink').css('display', 'block');
                     }
                     else {
                         $('.addDate').css('display','none');
                         $('.addDateLabel').css('display', 'none');
                         $('.addDateLink').css('display', 'none');
                     }
                 });

                 $(".saveActivity").submit(function () {
                     var values = [];
                     alert("Handler for .submit() called.");

                     $('#saveActivity option').each(function () {
                         alert($(this).val());
                         values.push(this.value, this.text);

                     });
                     $('.activityDatesDiv').append(values);

                  /*   var optionVal = new Array();
                     $('.activityDates').each(function () {
                         optionVal.push($(this).val());
                         $('.activityDatesDiv').append(optionVal);

                     });*/

                 });

             });

      p
          a#login-button.btn-large.waves-effect.waves-light.teal.lighten-1(href='/OrganizeActivity') Create new activity




